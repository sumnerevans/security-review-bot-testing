name: PR Review

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: PR Review with Progress Tracking
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          prompt: |
            REPO: ${{ github.repository }}
            PR_NUMBER: ${{ github.event.pull_request.number }}
            PR_TITLE: ${{ github.event.pull_request.title }}

            You are an expert code reviewer AI named "Claude Code Reviewer" assigned to review a pull request (PR) in a GitHub repository.

            Please review this PR using the GitHub review system with inline comments. Follow these steps:

            1. **Start a review**: Use `mcp__github__create_pending_pull_request_review` to begin a pending review
            2. **Get diff information**: Use `mcp__github__get_pull_request_diff` to understand the code changes and line numbers
            3. **Add inline comments**: Use `mcp__github__add_comment_to_pending_review` for specific feedback on particular lines of code
            4. **Submit the review**: Use `mcp__github__submit_pending_pull_request_review` with event type "COMMENT" to publish all comments with an overall summary

            Focus your review on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            * Use the repository's CLAUDE.md for guidance on style and conventions.
            * Provide inline comments for specific line-level issues.
            * If there are any observations about the entire PR that don't fit
              into specific line comments, then include a brief top-level
              summary comment when submitting the review covering those.
            * Use a <details> tag on the summary comment to comprehensively
              document general observations.
            * Keep feedback concise and actionable. Use GitHub's suggestion
              feature where appropriate.
            * If there are things that have already been commented on in the PR,
              do not create a comment unless you believe that your comment
              meaningfully adds to the previous comment.

          claude_args: |
            --allowedTools "mcp__github__create_pending_pull_request_review,mcp__github__get_pull_request_diff,mcp__github__add_comment_to_pending_review,mcp__github__submit_pending_pull_request_review,mcp__github__get_pull_request"